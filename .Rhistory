<<<<<<< HEAD
df <-
df %>%
mutate(
n = n(),
.by = c(BeachName, Date),
.after = product
)
## find the exponent of 1/n of the products----
df <-
df %>%
mutate(
Ecoli_1dGM = product^(1/n),
.by = c(BeachName, Date),
.after = n
)
# Find 30 day geometric mean----
## create separate df for 30 day calculations----
x <- df
## keep only needed cols----
x <-
x %>%
select(
BeachName, Date, Meas
)
## create df with all time intervals for each site----
y <-
x %>%
mutate(
date_30d = interval(
start = Date - 30,
end = Date
)
)
y <-
y %>%
distinct(BeachName, Date, date_30d)
## Cross join both df's----
Expected <- nrow(x) * nrow(y)
z <-
cross_join(
x, y
)
nrow(z) == Expected # True
## Keep only rows where beach name is the same and date within interval----
z <-
z %>%
filter(
BeachName.x == BeachName.y
)
## Keep only rows where Date is within date interval----
z <-
z %>%
filter(
Date.x %within% date_30d
)
## determine sample size for each date per site----
z <-
z %>%
mutate(
n = n(),
.by = c("BeachName.x", "date_30d")
)
## calculate product for each sampling date per site----
z <-
z %>%
mutate(
product = prod(Meas),
.by = c("BeachName.x", "date_30d")
)
## find the nth log of the products----
### find the nth log
z <-
z %>%
mutate(
Ecoli_30dGM = product^(1/n),
.by = c("BeachName.x", "date_30d")
)
## Remove rows where Date.x does not match with Date.y to reduce to one meas----
### per date per site
z <-
z %>%
filter(
Date.x == Date.y
)
## keep only BeachName.x, Date.x, and Ecoli_30d----
z <-
z %>%
select(
BeachName.x, Date.x, Ecoli_30dGM
)
## Keep only one measurement per date and arrange df by date----
z <-
z %>%
distinct()%>%
arrange(BeachName.x, Date.x)
## Rename cols----
z <-
z %>%
rename(
BeachName = BeachName.x,
Date = Date.x
)
## add to df----
### drop unneeded cols df
df <-
df %>%
select( # remove unneeded cols
!c(Meas, product, n)
)
### reduce df to only one measurement per day and arrange by date
df <-
df %>%
distinct(
Date, BeachName, Ecoli_1dGM,
.keep_all = TRUE
) %>%
arrange()
### merge both df's into one
df <-
left_join(
x = df,
y = z,
by = c("BeachName", "Date")
)
# arrange by date
df <-
df %>%
arrange(BeachName, Date)
# Note when beach closed due to high ecoli levels----
df %>% filter(Ecoli_1dGM > 1260) %>% nrow
# There are 4 days when 1 day gm > 1260
df %>% filter(Ecoli_30dGM > 126) %>% nrow()
# There are 22 days when 30 day gm > 126
## Create a column to denote when 1 day geometric mean > 1260----
df <-
df %>%
mutate(
Threshold = Ecoli_1dGM > 1260
)
## Add column to note that threshold over and that it was due to 1 day----
df <-
df %>%
mutate(
ClosureYN = if_else(
condition = Threshold == TRUE,
true = "Y",
false = "N"
),
ClosureReason = if_else(
condition = Threshold == TRUE,
true = "Ecoli_1dGM",
false = NA
)
)
length(which(df$ClosureYN=="Y")) == 4 # True
## Create a column to denote when 30 day geometric mean > 126----
df <-
df %>%
mutate(
Threshold = Ecoli_30dGM > 126
)
length(which(df$Threshold==TRUE)) == 22 # True
## Add column to note that threshold over and that it was due to 1 day----
df <-
df %>%
mutate(
ClosureYN = if_else(
condition = Threshold == TRUE,
true = "Y",
false = ClosureYN
),
ClosureReason = if_else(
condition = Threshold == TRUE &
is.na(ClosureReason),
true = "Ecoli_30dGM",
false = ClosureReason
)
)
## Remove threshold and SampleID cols----
df <-
df %>%
select(!c(Threshold, SampleID))
# Standardize df to match master df----
## Add missing cols with single value----
df <-
df %>%
mutate(
MonitoringOrg = "Burnsville"
)
## add cols with values based on another col----
## DOW for Crystal Beach = 19002700
## DOW for Alimagnet = 19002100
## DOW for Lac Lavon = 19044600
df <- # add DOW for Crystal
df %>%
mutate(
DOW = if_else(
condition = BeachName == "Crystal Beach",
true = 19002700,
false = NA
)
)
df <- # add DOW for Alimagnet
df %>%
mutate(
DOW = if_else(
condition = BeachName == "Alimagnet",
true = 19002100,
false = DOW
)
)
df <- # add DOW for Lac Lavon
df %>%
mutate(
DOW = if_else(
condition = BeachName == "Lac Lavon",
true = 19044600,
false = DOW
)
)
write_csv(
x = df,
file = here("MSP-beaches_Burnsville_clean.csv")
)
drive_upload(
media = here("MSP-beaches_Burnsville_clean.csv"),
path = "https://drive.google.com/drive/folders/1hM0Qh1wPfIoWRooyKnBGRF7MEVR9C51P"
name = "MSP-beaches_Burnsville_clean.csv"
drive_upload(
media = here("MSP-beaches_Burnsville_clean.csv"),
path = "https://drive.google.com/drive/folders/1hM0Qh1wPfIoWRooyKnBGRF7MEVR9C51P",
name = "MSP-beaches_Burnsville_clean.csv"
)
path <- here("MSP-beaches_Minnetonka_raw.xlsx")
x <- # import first sheet
read_xlsx(
path = path,
sheet = 1
)
name <- names(x)[1] # grab lake name
names(x) <- x[1, ] # Make first row into column names
x <- x[-1, ] # Remove first row
View(x)
colnames(x)[11] <- "Temporary1" # name unnamed col
colnames(x)[12] <- "Temporary2" # name unnamed col
x <- # add lake name column
x %>%
mutate(
BeachName = str_remove(
string = name,
pattern = " Beach"
),
.before = Date
)
str(x)
x <- # standardize col names
x %>%
rename(
"sample1" = ES,
"sample2" = ED,
"sample3" = WS,
"sample4" = WD,
"sample5" = C
)
y <- # import second sheet
read_xlsx(
path = path,
sheet = 2
)
name <- names(y)[1] # grab lake name
names(y) <- y[1, ] # Make first row into column names
y <- y[-1, ] # Remove first row
colnames(y)[11] <- "Temporary1" # name unnamed col
colnames(y)[12] <- "Temporary2" # name unnamed col
y <- # add lake name
y %>%
mutate(
BeachName = str_remove(
string = name,
pattern = " Beach"
),
.before = Date
)
str(y)
y <- # standardize col names
y %>%
rename(
"sample1" = SS,
"sample2" = SD,
"sample3" = NS,
"sample4" = ND,
"sample5" = C
)
minnetonka_raw <- # bind the df's into one
rbind(x, y)
minnetonka <- minnetonka_raw # create df to manipulate
View(minnetonka)
Expected <-
length(which(minnetonka$sample1 == "<1")) +
length(which(minnetonka$sample1 == "1")) +
length(which(minnetonka$sample2 == "<1")) +
length(which(minnetonka$sample2 == "1")) +
length(which(minnetonka$sample3 == "<1")) +
length(which(minnetonka$sample3 == "1")) +
length(which(minnetonka$sample4 == "<1")) +
length(which(minnetonka$sample4 == "1")) +
length(which(minnetonka$sample5 == "<1")) +
length(which(minnetonka$sample5 == "1"))
minnetonka <-
minnetonka %>%
mutate(
across(
.cols = 3:9,
.fns = ~ str_replace(
string = .x,
pattern = "<1",
replacement = "1"
)
)
)
length(which(minnetonka$sample1 == "1")) +
length(which(minnetonka$sample2 == "1")) +
length(which(minnetonka$sample3 == "1")) +
length(which(minnetonka$sample4 == "1")) +
length(which(minnetonka$sample5 == "1")) == Expected # True
minnetonka <-
minnetonka %>%
mutate(
across(
.cols = 2:7,
.fns = as.numeric
)
)
minnetonka <- # convert numeric date to date format
minnetonka %>%
mutate(
Date = as_date(
Date,
origin = "1899-12-30"
)
)
str(minnetonka)
summary(minnetonka)
Expected <- nrow(minnetonka) - 1
x <-
minnetonka %>%
drop_na(
"sample1"
)
nrow(x) == Expected
minnetonka <-
minnetonka %>%
drop_na(
"sample1"
)
nrow(minnetonka) == Expected
unique(minnetonka$Notes)
minnetonka <- # create new notes col using a temporary col, rename original notes col
minnetonka %>%
rename(
Temporary3 = Notes,
Notes = Temporary2
)
minnetonka <- # make Notes col only NA values
minnetonka %>%
mutate(
Notes = NA
)
minnetonka <- # note that contaminated and retested data as suspicioius
minnetonka %>%
mutate(
Notes = if_else(
condition = Temporary3 == "**Possible contamination",
true = "potential sample contamination",
false = Notes
),
Notes = if_else(
condition = Temporary3 == "Retest of WS was 6.3",
true = "used retested water sample for geometric mean",
false = Notes
)
)
minnetonka <-
minnetonka %>%
select(
!c(
"Composite E. coli (CFU/100ml)",
"5-Sample Geo. Mean E. coli (CFU/100ml)",
"Ambient Water Temp. oF",
Temporary3,
Temporary1
)
)
Expected <-
nrow(minnetonka) * 5
minnetonka <-
minnetonka %>%
pivot_longer(
cols = c(sample1, sample2, sample3, sample4, sample5),
names_to = "SampleID",
values_to = "Meas"
)
nrow(minnetonka) == Expected # True
minnetonka <-
minnetonka %>%
mutate(
product = prod(Meas),
.by = c(BeachName, Date)
)
minnetonka <-
minnetonka %>%
mutate(
n = n(),
.by = c(BeachName, Date)
)
View(minnetonka)
x <-
minnetonka %>%
mutate(
Ecoli_1dGM = product^(1/n),
.by = c(BeachName, Date)
)
View(x)
minnetonka <-
minnetonka %>%
mutate(
Ecoli_1dGM = product^(1/n),
.by = c(BeachName, Date)
)
x <- minnetonka
x <-
x %>%
select(
BeachName, Date, SampleID, Meas
)
y <-
x %>%
mutate(
date_30d = interval(
start = Date - 30,
end = Date
)
)
y <-
y %>%
distinct(BeachName, Date, date_30d)
Expected <- nrow(x) * nrow(y)
z <-
cross_join(
x, y
)
nrow(z) == Expected # True
z <-
z %>%
filter(
BeachName.x == BeachName.y
)
z <-
z %>%
filter(
Date.x %within% date_30d
)
z <-
z %>%
mutate(
n = n(),
.by = c("BeachName.x", "date_30d")
)
z <-
z %>%
mutate(
product = prod(Meas),
.by = c("BeachName.x", "date_30d")
)
z <-
z %>%
mutate(
Ecoli_30dGM = product^(1/n),
.by = c("BeachName.x", "date_30d")
)
z <-
z %>%
filter(
Date.x == Date.y
)
z <-
z %>%
select(
BeachName.x, Date.x, Ecoli_30dGM
) %>%
unique() %>%
arrange(BeachName.x, Date.x)
z <-
z %>%
rename(
BeachName = BeachName.x,
Date = Date.x
)
minnetonka <-
minnetonka %>%
select( # remove unneeded cols
!c(SampleID, Meas, product, n)
) %>%
distinct() # keep only unique rows
minnetonka <-
left_join(
x = minnetonka,
y = z,
by = c("BeachName", "Date")
)
minnetonka %>% filter(Ecoli_1dGM > 1260) %>% nrow
minnetonka %>% filter(Ecoli_30dGM > 126) %>% nrow()
=======
x <-
x %>%
select(
"Sample1", "Sample2", "Sample3", "Date"
)
x <-
x %>%
mutate(
Date = str_remove(
string = Date,
pattern = "\\*"
)
)
row_remove <- which(x$Date == "8/28/2017") # create object with row #
y <- x[row_remove, ] # put row in a new df
x <- x[-(row_remove), ] # remove row from main df
df_alt <- y
Expected = 13
x <-
x %>%
mutate(
across(
.cols = 1:4,
.fns = as.numeric
)
) %>%
drop_na()
nrow(x) == Expected # True
x <-
x %>%
mutate(
Ecoli_units = "mpn"
)
Expected <- nrow(df) + nrow(x)
df <-
rbind(
df, x
)
nrow(df) == Expected # True
x <-
burnsville[[9]]
x <-
x %>%
rename(
"Sample1" = 2,
"Sample2" = 3,
"Sample3" = 4,
"Date" = 7
)
x <-
x %>%
select(
"Sample1", "Sample2", "Sample3", "Date"
)
Expected = 14
x <-
x %>%
mutate(
across(
.cols = 1:4,
.fns = as.numeric
)
) %>%
drop_na()
nrow(x) == Expected # True
x <-
x %>%
mutate(
Ecoli_units = "mpn"
)
Expected <- nrow(df) + nrow(x)
df <-
rbind(
df, x
)
nrow(df) == Expected # True
x <-
burnsville[[10]]
x <-
x %>%
rename(
"Sample1" = 2,
"Sample2" = 3,
"Sample3" = 4,
"Date" = 7
)
x <-
x %>%
select(
"Sample1", "Sample2", "Sample3", "Date"
)
x <-
x[1:18, ]
Expected = 15
x <-
x %>%
mutate(
across(
.cols = 1:4,
.fns = as.numeric
)
) %>%
drop_na()
nrow(x) == Expected # True
x <-
x %>%
mutate(
Ecoli_units = "mpn"
)
Expected <- nrow(df) + nrow(x)
df <-
rbind(
df, x
)
nrow(df) == Expected # True
x <-
burnsville[[11]]
x <-
x %>%
rename(
"Sample1" = 2,
"Sample2" = 3,
"Sample3" = 4,
"Date" = 7
)
x <-
x %>%
select(
"Sample1", "Sample2", "Sample3", "Date"
)
Expected = 14
x <-
x %>%
mutate(
across(
.cols = 1:4,
.fns = as.numeric
)
) %>%
drop_na()
nrow(x) == Expected # True
x <-
x %>%
mutate(
Ecoli_units = "mpn"
)
Expected <- nrow(df) + nrow(x)
df <-
rbind(
df, x
)
nrow(df) == Expected # True
x <-
burnsville[[12]]
x <-
x %>%
rename(
"Sample1" = 2,
"Sample2" = 3,
"Sample3" = 4,
"Date" = 7
)
x <-
x %>%
select(
"Sample1", "Sample2", "Sample3", "Date"
)
x <-
x[1:18, ]
Expected = 14
x <-
x %>%
mutate(
across(
.cols = 1:4,
.fns = as.numeric
)
) %>%
drop_na()
nrow(x) == Expected # True
x <-
x %>%
mutate(
Ecoli_units = "cfu"
)
Expected <- nrow(df) + nrow(x)
df <-
rbind(
df, x
)
nrow(df) == Expected # True
x <-
burnsville[[13]]
x <-
x %>%
rename(
"Sample1" = 2,
"Sample2" = 3,
"Sample3" = 4,
"Date" = 7
)
x <-
x %>%
select(
"Sample1", "Sample2", "Sample3", "Date", "...1"
)
x <-
x[1:18, ]
Expected = 15
x <-
x %>%
mutate(
across(
.cols = 1:4,
.fns = as.numeric
)
) %>%
drop_na()
nrow(x) == Expected # True
x <-
x %>%
mutate(
Ecoli_units = "cfu"
)
x <-
x %>%
mutate(
Ecoli_units = if_else(
condition = ...1 == "week 6***",
true = "mpn",
false = Ecoli_units
)
)
x <-
x %>%
select(
!...1
)
Expected <- nrow(df) + nrow(x)
df <-
rbind(
df, x
)
nrow(df) == Expected # True
View(burnsville)
install.packages(c("anytime", "broom", "commonmark", "data.table", "dataRetrieval", "httr2", "neonUtilities", "pbapply", "purrr", "raster", "reticulate", "rnaturalearth", "rprojroot", "RSQLite", "s2", "sf", "spatstat", "spatstat.explore", "spatstat.geom", "spatstat.linnet", "spatstat.model", "spatstat.univar", "spatstat.utils", "stars", "terra", "tmaptools", "waldo"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(mnsentinellakes)
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv") %>%
rename(DOW = DNRID)
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv") %>%
rename(DOW = DNRID) %>%
mutate(DOW = fixlakeid(DOW))
beachesmissingDOW <- beaches %>%
filter(is.na(DOW))
beaches <- beaches %>%
filter(!is.na(DOW))
mutate(DOW = fixlakeid(DOW))
beaches <- beaches %>%
filter(!is.na(DOW)) %>%
mutate(DOW = fixlakeid(DOW))
View(beaches)
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID))
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00"))
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
mutate(Date = as.POSIXct(DAte)) %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW == DNRID)
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DNRID = DOW)
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DNRID = DOW)
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(mnsentinellakes)
# clear workspace
rm(list = ls())
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00"))
# Add swim ponds back in, fix date, and rearrange columns
beaches <- cbind(beaches, beachesmissingDOW)
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00"))
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(-DNRID)
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
beaches <- beaches
mutate(Date = as.POSIXct(Date))
beaches <- beaches
mutate(Date = as.Date(Date))
beaches <- beaches
mutate(Date = as.Date(Date, format="%m/%d/%Y")) %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(mnsentinellakes)
# clear workspace
rm(list = ls())
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(-DNRID)
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
# fix date, and rearrange columns
beaches <- beaches
mutate(Date = as.Date(Date, format="%m/%d/%Y")) %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
View(beaches)
beaches <- beaches
mutate(Date = parse_date(Date, format="%m/%d/%Y"))
beaches <- beaches
mutate(Date = as.Date(Date, format = "%d/%m/%Y"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(mnsentinellakes)
# clear workspace
rm(list = ls())
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(-DNRID)
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
# fix date, and rearrange columns
# beaches <- beaches
#   mutate(Date = as.Date(Date, format = "%d/%m/%Y"))
#
#
#
#
#   %>%
#   select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
# save
write.csv(beaches, "beach_combined_data_081125.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(mnsentinellakes)
# clear workspace
rm(list = ls())
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(-DNRID)
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
# fix date,
# beaches <- beaches
#   mutate(Date = as.Date(Date, format = "%d/%m/%Y"))
# rearrange columns
beaches <- beaches %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
# save
write.csv(beaches, "beach_combined_data_081125.csv", row.names = FALSE)
beaches <- beaches
mutate(Date = as.Date(Date, format = "%d/%m/%Y"))
beaches <- beaches
mutate(Date = as.Date(Date, format = "%Y-%m-%d"))
beaches <- beaches %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d"))
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(-DNRID)
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
# fix date, rearrange columns
beaches <- beaches %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
# save
write.csv(beaches, "beach_combined_data_081125.csv", row.names = FALSE)
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(-DNRID)
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
# fix date, rearrange columns
beaches <- beaches %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, ClosureYN, ClosureReason)
# save
write.csv(beaches, "beach_combined_Ecoli_081125.csv", row.names = FALSE)
Ramsey <- beaches_formatted %>%
select(MonitoringOrg == "RamseyCo")
beaches <- read.csv("Beaches-2004-2024-RC-MPRB-TRPD_050825.csv")
# subset swim ponds with no dow
beachesmissingDOW <- beaches %>%
filter(is.na(DNRID)) %>%
rename(DOW = DNRID)
# fix DNRID and add zeroes
beaches <- beaches %>%
filter(!is.na(DNRID)) %>%
mutate(DNRID = fixlakeid(DNRID)) %>%
mutate(DOW = paste0(DNRID, "00")) %>%
select(-DNRID)
# Add swim ponds back in,
beaches <- rbind(beaches, beachesmissingDOW)
# fix date, rearrange columns
beaches_formatted <- beaches %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
select(BeachName, DOW, Date, MonitoringOrg, Ecoli_1dGM, Ecoli_30dGM, Ecoli_units, ClosureYN, ClosureReason)
# save
write.csv(beaches_formatted, "beach_combined_Ecoli_081125.csv", row.names = FALSE)
Ramsey <- beaches_formatted %>%
select(MonitoringOrg == "RamseyCo")
Ramsey <- beaches_formatted %>%
filter(MonitoringOrg == "RamseyCo")
write.csv(Ramsey , "RamseyCo_081125.csv", row.names = FALSE)
TRPB <- beaches_formatted %>%
filter(MonitoringOrg == "TRPD")
write.csv(TRPD , "TRPD_081125.csv", row.names = FALSE)
TRPD <- beaches_formatted %>%
filter(MonitoringOrg == "TRPD")
write.csv(TRPD , "TRPD_081125.csv", row.names = FALSE)
MPRB_habs <- beaches%>%
filter(MonitoringOrg == "MPRB") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
select(BeachName, DOW, Date, MonitoringOrg, Entero_avg_cfu, Microcystin_ugL, Cylindro_ugL, Anatoxin_ugL, ClosureYN, ClosureReason)
write.csv(MPRB_habs, "MPRB_habs_081125.csv", row.names = FALSE)
MPRB_ecoli <- beaches_formatted %>%
filter(MonitoringOrg == "MPRB")
write.csv(MPRB_ecoli , "MPRB_Ecoli_081125.csv", row.names = FALSE)
>>>>>>> refs/remotes/origin/main
